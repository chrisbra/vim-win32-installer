* [7.4.2112](https://github.com/vim/vim/releases/tag/v7.4.2112) getcompletion(.., 'dir') returns a match with trailing "*" when there are no matches. (Ch\n* Update gitignore for new test binary. (Oyvind Holm, closes #954)\n* [7.4.2111](https://github.com/vim/vim/releases/tag/v7.4.2111) Defaults are very conservative. Solution: Move settings from vimrc_example.vim to default\n* [7.4.2110](https://github.com/vim/vim/releases/tag/v7.4.2110) When there is an CmdUndefined autocmd then the error for a missing command is E464 instea\n* [7.4.2109](https://github.com/vim/vim/releases/tag/v7.4.2109) Setting 'display' to "lastline" is a drastic change, while omitting it results in lots of\n* [7.4.2108](https://github.com/vim/vim/releases/tag/v7.4.2108) Netbeans test is flaky. Solution: Wait for the cursor to be positioned.\n* [7.4.2107](https://github.com/vim/vim/releases/tag/v7.4.2107) Misplaced equal sign. Solution: Remove it.\n* [7.4.2106](https://github.com/vim/vim/releases/tag/v7.4.2106) Clang warns about missing field in initializer. Solution: Define COMMA and use it. (Kazun\n* [7.4.2105](https://github.com/vim/vim/releases/tag/v7.4.2105) Configure reports default features to be "normal" while it is "huge". Solution: Change th\n* [7.4.2104](https://github.com/vim/vim/releases/tag/v7.4.2104) Code duplication when unreferencing a function. Solution: De-duplicate.\n* [7.4.2103](https://github.com/vim/vim/releases/tag/v7.4.2103) Can't have "augroup END" right after ":au!". Solution: Check for the bar character before\n* [7.4.2102](https://github.com/vim/vim/releases/tag/v7.4.2102) Tiny build with GUI fails. Solution: Revert one FOR_ALL_ change.\n* [7.4.2101](https://github.com/vim/vim/releases/tag/v7.4.2101) Looping over windows, buffers and tab pages is inconsistant. Solution: Use FOR_ALL_ macro\n* [7.4.2100](https://github.com/vim/vim/releases/tag/v7.4.2100) "cgn" and "dgn" do not work correctly with a single character match and the replacement i\n* [7.4.2099](https://github.com/vim/vim/releases/tag/v7.4.2099) When a keymap is active only "(lang)" is displayed. (Ilya Dogolazky) Solution: Show the k\n* Updated runtime files.\n* [7.4.2098](https://github.com/vim/vim/releases/tag/v7.4.2098) Text object tests are old style. Solution: Turn them into new style tests. (James McCoy, \n* [7.4.2097](https://github.com/vim/vim/releases/tag/v7.4.2097) Warning from 64 bit compiler. Solution: use size_t instead of int. (Mike Williams)\n* [7.4.2096](https://github.com/vim/vim/releases/tag/v7.4.2096) Lambda functions show up with completion. Solution: Don't show lambda functions. (Ken Tak\n* [7.4.2095](https://github.com/vim/vim/releases/tag/v7.4.2095) Man test fails when run with the GUI. Solution: Adjust for different behavior of GUI. Add\n* [7.4.2094](https://github.com/vim/vim/releases/tag/v7.4.2094) The color allocation in X11 is overly complicated. Solution: Remove find_closest_color(),\n* [7.4.2093](https://github.com/vim/vim/releases/tag/v7.4.2093) Netbeans test fails once in a while. Leaving log file behind. Solution: Add it to the lis\n* [7.4.2092](https://github.com/vim/vim/releases/tag/v7.4.2092) GTK 3 build fails with older GTK version. Solution: Check the pango version. (Kazunobu Ku\n* [7.4.2091](https://github.com/vim/vim/releases/tag/v7.4.2091) Coverity reports a resource leak when out of memory. Solution: Close the file before retu\n* [7.4.2090](https://github.com/vim/vim/releases/tag/v7.4.2090) Using submatch() in a lambda passed to substitute() is verbose. Solution: Use a static li\n* [7.4.2089](https://github.com/vim/vim/releases/tag/v7.4.2089) Color handling of X11 GUIs is too complicated. Solution: Simplify the code. Use RGBA wher\n* [7.4.2088](https://github.com/vim/vim/releases/tag/v7.4.2088) Keymap test fails with normal features. Solution: Bail out if the keymap feature is not s\n* [7.4.2087](https://github.com/vim/vim/releases/tag/v7.4.2087) Digraph code test coverage is still low. Solution: Add more tests. (Christian Brabandt)\n* [7.4.2086](https://github.com/vim/vim/releases/tag/v7.4.2086) Using the system default encoding makes tests unpredictable. Solution: Always use utf-8 o\n* [7.4.2085](https://github.com/vim/vim/releases/tag/v7.4.2085) Digraph tests fails on some systems. Solution: Run it separately and set 'encoding' early\n* [7.4.2084](https://github.com/vim/vim/releases/tag/v7.4.2084) New digraph test makes testing hang. Solution: Don't set "nocp".\n* [7.4.2083](https://github.com/vim/vim/releases/tag/v7.4.2083) Coverity complains about not restoring a value. Solution: Restore the value, although it'\n* [7.4.2082](https://github.com/vim/vim/releases/tag/v7.4.2082) Not much test coverage for digraphs. Solution: Add a new style digraph test. (Christian B\n* [7.4.2081](https://github.com/vim/vim/releases/tag/v7.4.2081) Line numbers in the error list are not always adjusted. Solution: Set b_has_qf_entry prop\n* [7.4.2080](https://github.com/vim/vim/releases/tag/v7.4.2080) When using PERROR() on some systems assert_fails() does not see the error. Solution: Make\n* [7.4.2079](https://github.com/vim/vim/releases/tag/v7.4.2079) Netbeans test fails on non-Unix systems. Solution: Only do the permission check on Unix s\n* [7.4.2078](https://github.com/vim/vim/releases/tag/v7.4.2078) Running checks in po diretory fails. Solution: Add colors used in syntax.c to the builtii\n* [7.4.2077](https://github.com/vim/vim/releases/tag/v7.4.2077) Cannot update 'tabline' when a tab was closed. Solution: Add the TabClosed autocmd event.\n* [7.4.2076](https://github.com/vim/vim/releases/tag/v7.4.2076) Syntax error when dict has '>' key. Solution: Check for endchar. (Ken Takata)\n* [7.4.2075](https://github.com/vim/vim/releases/tag/v7.4.2075) No autocommand event to initialize a window or tab page. Solution: Add WinNew and TabNew \n* [7.4.2074](https://github.com/vim/vim/releases/tag/v7.4.2074) One more place using a dummy variable. Solution: Use offsetof(). (Ken Takata)\n* [7.4.2073](https://github.com/vim/vim/releases/tag/v7.4.2073) rgb.txt is read for every color name. Solution: Load rgb.txt once. (Christian Brabandt) A\n* [7.4.2072](https://github.com/vim/vim/releases/tag/v7.4.2072) substitute() does not support a Funcref argument. Solution: Support a Funcref like it sup\n* [7.4.2071](https://github.com/vim/vim/releases/tag/v7.4.2071) The return value of type() is difficult to use. Solution: Define v:t_ constants. (Ken Tak\n* [7.4.2070](https://github.com/vim/vim/releases/tag/v7.4.2070) Missing change to include file. Solution: Include the spell header file.\n* [7.4.2069](https://github.com/vim/vim/releases/tag/v7.4.2069) spell.c is too big. Solution: Split it in spell file handling and spell checking.\n* [7.4.2068](https://github.com/vim/vim/releases/tag/v7.4.2068) Not all arguments of trunc_string() are tested. Memory access error when running the mess\n* [7.4.2067](https://github.com/vim/vim/releases/tag/v7.4.2067) Compiler warning for char/char_u conversion. (Tony Mechelynck) Inefficient code. Solution\n* [7.4.2066](https://github.com/vim/vim/releases/tag/v7.4.2066) getcompletion() not well tested. Solution: Add more testing.\n* [7.4.2065](https://github.com/vim/vim/releases/tag/v7.4.2065) Compiler warns for uninitialzed variable. (John Marriott) Solution: Set lnum to the right\n* [7.4.2064](https://github.com/vim/vim/releases/tag/v7.4.2064) Coverity warns for possible buffer overflow. Solution: Use vim_strcat() instead of strcat\n* [7.4.2063](https://github.com/vim/vim/releases/tag/v7.4.2063) eval.c is still too big. Solution: Split off internal functions to evalfunc.c.\n* [7.4.2062](https://github.com/vim/vim/releases/tag/v7.4.2062) Using dummy variable to compute struct member offset. Solution: Use offsetof().\n* [7.4.2061](https://github.com/vim/vim/releases/tag/v7.4.2061) qf_init_ext() is too big. Solution: Move code to qf_parse_line() (Yegappan Lakshmanan)\n* [7.4.2060](https://github.com/vim/vim/releases/tag/v7.4.2060) Wrong file name. Solution: Fix typo.\n* [7.4.2059](https://github.com/vim/vim/releases/tag/v7.4.2059) Non-Unix builds fail. Solution: Update Makefiles for new files.\n* [7.4.2058](https://github.com/vim/vim/releases/tag/v7.4.2058) eval.c is too big. Solution: Move user functions to userfunc.c\n* [7.4.2057](https://github.com/vim/vim/releases/tag/v7.4.2057) eval.c is too big. Solution: Move List functions to list.c\n* [7.4.2056](https://github.com/vim/vim/releases/tag/v7.4.2056) Build fails. Solution: Add missing changes.\n* [7.4.2055](https://github.com/vim/vim/releases/tag/v7.4.2055) eval.c is too big. Solution: Move Dictionary functions to dict.c.\n* Update runtime files.\n* Put building with interfaces on the right target.\n* [7.4.2054](https://github.com/vim/vim/releases/tag/v7.4.2054) Wrong part of #ifdef removed. Solution: Use the right part. (Hirohito Higashi)\n* Correct build condition.\n* Add missing "then".\n* Add a separate build target for the unittests. Hopefully the coverage will be merged then.\n* Run unittests before scripttests. Hopefully does not mess up coverage.\n* [7.4.2053](https://github.com/vim/vim/releases/tag/v7.4.2053) Can't run scripttests in the top directory. Solution: Add targets to the top Makefile.\n* [7.4.2052](https://github.com/vim/vim/releases/tag/v7.4.2052) Coverage report is messed up by the unittests. Solution: Add a separate test target for s\n* [7.4.2051](https://github.com/vim/vim/releases/tag/v7.4.2051) No proper testing of trunc_string(). Solution: Add a unittest for message.c.\n* [7.4.2050](https://github.com/vim/vim/releases/tag/v7.4.2050) When using ":vimgrep" may end up with duplicate buffers. Solution: When adding an error l\n* [7.4.2049](https://github.com/vim/vim/releases/tag/v7.4.2049) There is no way to get a list of the error lists. Solution: Add ":chistory" and ":lhistor\n* [7.4.2048](https://github.com/vim/vim/releases/tag/v7.4.2048) There is still code and help for unsupported systems. Solution: Remove the code and text.\n* [7.4.2047](https://github.com/vim/vim/releases/tag/v7.4.2047) Compiler warning for initializing a struct. Solution: Initialize in another way. (Anton L\n* Updated runtime files.\n* [7.4.2046](https://github.com/vim/vim/releases/tag/v7.4.2046) The qf_init_ext() function is too big. Solution: Refactor it. (Yegappan Lakshmanan)\n* [7.4.2045](https://github.com/vim/vim/releases/tag/v7.4.2045) Memory leak when using a function callback. Solution: Don't save the function name when i\n* [7.4.2044](https://github.com/vim/vim/releases/tag/v7.4.2044) filter() and map() either require a string or defining a function. Solution: Support lamb\n* [7.4.2043](https://github.com/vim/vim/releases/tag/v7.4.2043) setbuvfar() causes a screen redraw. Solution: Only use aucmd_prepbuf() for options.\n* [7.4.2042](https://github.com/vim/vim/releases/tag/v7.4.2042) GTK: display updating is not done properly and can be slow. Solution: Use gdk_display_flu\n* [7.4.2041](https://github.com/vim/vim/releases/tag/v7.4.2041) Netbeans file authentication not tested. Solution: Add a test.\n* [7.4.2040](https://github.com/vim/vim/releases/tag/v7.4.2040) New files missing from distribution. Solution: Add new test scripts.\n* [7.4.2039](https://github.com/vim/vim/releases/tag/v7.4.2039) The Netbeans integration is not tested. Solution: Add a first Netbeans test.\n* [7.4.2038](https://github.com/vim/vim/releases/tag/v7.4.2038) Small build still fails. Solution: Adjust more #ifdefs.\n* [7.4.2037](https://github.com/vim/vim/releases/tag/v7.4.2037) Small build fails. Solution: Adjust #ifdefs.\n* [7.4.2036](https://github.com/vim/vim/releases/tag/v7.4.2036) Looking up a buffer by number is slow if there are many. Solution: Use a hashtab.\n* [7.4.2035](https://github.com/vim/vim/releases/tag/v7.4.2035) On Solaris with ZFS the ACL may get removed. Solution: Always restore the ACL for Solaris\n* [7.4.2034](https://github.com/vim/vim/releases/tag/v7.4.2034) Build fails with some version of MinGW. (illusorypan) Solution: Recognize mingw32. (Ken T\n* [7.4.2033](https://github.com/vim/vim/releases/tag/v7.4.2033) 'cscopequickfix' option does not accept new value "a". Solution: Adjust list of command c\n* [7.4.2032](https://github.com/vim/vim/releases/tag/v7.4.2032) Build fails with 64 bit MinGW. (Axel Bender) Solution: Handle dash vs. underscore. (Ken T\n* [7.4.2031](https://github.com/vim/vim/releases/tag/v7.4.2031) The list_lbr_utf8 test fails if ~/.vim/syntax/c.vim sets 'textwidth' to a non-zero value.\n* [7.4.2030](https://github.com/vim/vim/releases/tag/v7.4.2030) ARCH must be set properly when using MinGW. Solution: Detect the default value of ARCH fr\n* [7.4.2029](https://github.com/vim/vim/releases/tag/v7.4.2029) printf() does not work with 64 bit numbers. Solution: use the "L" length modifier. (Ken T\n* [7.4.2028](https://github.com/vim/vim/releases/tag/v7.4.2028) cppcheck warns for using index before limits check. Solution: Swap the expressions. (Domi\n* [7.4.2027](https://github.com/vim/vim/releases/tag/v7.4.2027) Can't build with +eval but without +menu. Solution: Add #ifdef. (John Marriott)\n* [7.4.2026](https://github.com/vim/vim/releases/tag/v7.4.2026) Reference counting for callbacks isn't right. Solution: Add free_callback(). (Ken Takata)\n* [7.4.2025](https://github.com/vim/vim/releases/tag/v7.4.2025) The cursor blinking stops or is irregular when receiving date over a channel and writing \n* [7.4.2024](https://github.com/vim/vim/releases/tag/v7.4.2024) More buf_valid() calls can be optimized. Solution: Use bufref_valid() instead.\n* [7.4.2023](https://github.com/vim/vim/releases/tag/v7.4.2023) buflist_findname_stat() may find a dummy buffer. Solution: Set the BF_DUMMY flag after lo\n* [7.4.2022](https://github.com/vim/vim/releases/tag/v7.4.2022) Warnings from 64 bit compiler. Solution: Add type casts. (Mike Williams)\n* [7.4.2021](https://github.com/vim/vim/releases/tag/v7.4.2021) Still too many buf_valid() calls. Solution: Make au_new_curbuf a bufref. Use bufref_valid\n* [7.4.2020](https://github.com/vim/vim/releases/tag/v7.4.2020) Can't build without +autocmd feature. Solution: Adjust #ifdefs.\n* [7.4.2019](https://github.com/vim/vim/releases/tag/v7.4.2019) When ignoring case utf_fold() may consume a lot of time. Solution: Optimize for ASCII.\n* [7.4.2018](https://github.com/vim/vim/releases/tag/v7.4.2018) buf_valid() can be slow when there are many buffers. Solution: Add bufref_valid(), only g\n* [7.4.2017](https://github.com/vim/vim/releases/tag/v7.4.2017) When there are many errors adding them to the quickfix list takes a long time. Solution: \n* [7.4.2016](https://github.com/vim/vim/releases/tag/v7.4.2016) Warning from MinGW about _WIN32_WINNT redefined. (John Marriott) Solution: First undefine\n* [7.4.2015](https://github.com/vim/vim/releases/tag/v7.4.2015) When a file gets a name when writing it 'acd' is not effective. (Dan Church) Solution: In\n* [7.4.2014](https://github.com/vim/vim/releases/tag/v7.4.2014) Using "noinsert" in 'completeopt' does not insert match. Solution: Set compl_enter_select\n* [7.4.2013](https://github.com/vim/vim/releases/tag/v7.4.2013) Using "noinsert" in 'completeopt' breaks redo. Solution: Set compl_curr_match. (Shougo, c\n* Updated runtime files.\n* [7.4.2012](https://github.com/vim/vim/releases/tag/v7.4.2012) Test for getcompletion() does not pass on all systems. Solution: Only test what is suppor\n* [7.4.2011](https://github.com/vim/vim/releases/tag/v7.4.2011) It is not easy to get a list of command arguments. Solution: Add getcompletion(). (Yegapp\n* [7.4.2010](https://github.com/vim/vim/releases/tag/v7.4.2010) There is a :cbottom command but no :lbottom command. Solution: Add :lbottom. (Yegappan La\n* [7.4.2009](https://github.com/vim/vim/releases/tag/v7.4.2009) Messages test fails. Solution: Don't set redir_execute before returning.\n* [7.4.2008](https://github.com/vim/vim/releases/tag/v7.4.2008) evalcmd() has a confusing name. Solution: Rename to execute(). Make silent optional. Supp\n* [7.4.2007](https://github.com/vim/vim/releases/tag/v7.4.2007) Running the tests leaves a viminfo file behind. Solution: Make the viminfo option empty.\n* [7.4.2006](https://github.com/vim/vim/releases/tag/v7.4.2006) Crash when using tabnext in BufUnload autocmd. (Norio Takagi) Solution: First check that \n* [7.4.2005](https://github.com/vim/vim/releases/tag/v7.4.2005) After using evalcmd() message output is in the wrong position. (Christian Brabandt) Solut\n* [7.4.2004](https://github.com/vim/vim/releases/tag/v7.4.2004) GUI: cursor displayed in the wrong position. Solution: Correct screen_cur_col and screen_\n* [7.4.2003](https://github.com/vim/vim/releases/tag/v7.4.2003) Still cursor flickering when a callback updates the screen. (David Samvelyan) Solution: P\n* [7.4.2002](https://github.com/vim/vim/releases/tag/v7.4.2002) Crash when passing number to filter() or map(). Solution: Convert to a string. (Ozaki Kii\n* [7.4.2001](https://github.com/vim/vim/releases/tag/v7.4.2001) Tiny build fails. (Tony Mechelynck) Solution: Add #ifdef.\n* [7.4.2000](https://github.com/vim/vim/releases/tag/v7.4.2000) Evalcmd test fails. Solution: Add missing piece.\n* [7.4.1999](https://github.com/vim/vim/releases/tag/v7.4.1999) evalcmd() doesn't work recursively. Solution: Use redir_evalcmd instead of redir_vname.\n* [7.4.1998](https://github.com/vim/vim/releases/tag/v7.4.1998) When writing buffer lines to a job there is no NL to NUL conversion. Solution: Make it wo\n* [7.4.1997](https://github.com/vim/vim/releases/tag/v7.4.1997) Cannot easily scroll the quickfix window. Solution: Add ":cbottom".\n* [7.4.1996](https://github.com/vim/vim/releases/tag/v7.4.1996) Capturing the output of a command takes a few commands. Solution: Add evalcmd().\n* [7.4.1995](https://github.com/vim/vim/releases/tag/v7.4.1995) GUI: cursor drawn in wrong place if a timer callback causes a screen update. (David Samve\n* [7.4.1994](https://github.com/vim/vim/releases/tag/v7.4.1994) True-false test fails. Solution: Filter the dict to only keep the value that matters.\n* [7.4.1993](https://github.com/vim/vim/releases/tag/v7.4.1993) Not all TRUE and FALSE arguments are tested. Solution: Add a few more tests.\n* [7.4.1992](https://github.com/vim/vim/releases/tag/v7.4.1992) Values for true and false can be confusing. Solution: Update the documentation. Add a tes\n* [7.4.1991](https://github.com/vim/vim/releases/tag/v7.4.1991) glob() does not add a symbolic link when there are no wildcards. Solution: Remove the cal\n* [7.4.1990](https://github.com/vim/vim/releases/tag/v7.4.1990) Cscope items are not sorted. Solution: Put the new "a" command first. (Ken Takata)\n* [7.4.1989](https://github.com/vim/vim/releases/tag/v7.4.1989) filter() and map() only accept a string argument. Solution: Implement using a Funcref arg\n* [7.4.1988](https://github.com/vim/vim/releases/tag/v7.4.1988) When updating viminfo with file marks there is no time order. Solution: Remember the time\n* [7.4.1987](https://github.com/vim/vim/releases/tag/v7.4.1987) When copying unrecognized lines for viminfo, end up with useless continuation lines. Solu\n* [7.4.1986](https://github.com/vim/vim/releases/tag/v7.4.1986) Compiler warns for loss of data. Solution: Use size_t instead of int. (Christian Brabandt\n* [7.4.1985](https://github.com/vim/vim/releases/tag/v7.4.1985) Missing changes in VMS build file. Solution: Use the right file name.\n* Updated runtime files.\n* [7.4.1984](https://github.com/vim/vim/releases/tag/v7.4.1984) Not all quickfix features are tested. Solution: Add a few more tests. (Yegappan Lakshmana\n* [7.4.1983](https://github.com/vim/vim/releases/tag/v7.4.1983) farsi.c and arabic.c are included in a strange way. Solution: Build them like other files\n* [7.4.1982](https://github.com/vim/vim/releases/tag/v7.4.1982) Viminfo file contains duplicate change marks. Solution: Drop duplicate marks.\n* [7.4.1981](https://github.com/vim/vim/releases/tag/v7.4.1981) No testing for Farsi code. Solution: Add a minimal test. Clean up Farsi code.\n* [7.4.1980](https://github.com/vim/vim/releases/tag/v7.4.1980) 'errorformat' is parsed for every call to ":caddexpr". Can't add to two location lists as\n* [7.4.1979](https://github.com/vim/vim/releases/tag/v7.4.1979) Getting value of binary option is wrong. (Kent Sibilev) Solution: Fix type cast. Add a te\n* [7.4.1978](https://github.com/vim/vim/releases/tag/v7.4.1978) Large file test does not delete its output. Solution: Delete the output. Check size prope\n* [7.4.1977](https://github.com/vim/vim/releases/tag/v7.4.1977) With 64 bit changes don't need three calls to sprintf(). Solution: Simplify the code, use\n* [7.4.1976](https://github.com/vim/vim/releases/tag/v7.4.1976) Number variables are not 64 bits while they could be. Solution: Add the num64 feature. (K\n* [7.4.1975](https://github.com/vim/vim/releases/tag/v7.4.1975) On MS-Windows large files (> 2Gbyte) cause problems. Solution: Use "off_T" instead of "of\n* [7.4.1974](https://github.com/vim/vim/releases/tag/v7.4.1974) GUI has a problem with some termcodes. Solution: Handle negative numbers. (Kazunobu Kuriy\n* [7.4.1973](https://github.com/vim/vim/releases/tag/v7.4.1973) On MS-Windows the package directory may be added at the end because of forward/backward s
